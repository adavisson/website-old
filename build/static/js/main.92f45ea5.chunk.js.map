{"version":3,"sources":["components/Home.js","components/About.js","components/NavBar.js","components/Resume.js","App.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync","files/andrew-resume.pdf"],"names":["Home","className","src","About","NavBar","Navbar","Toggle","aria-controls","Collapse","id","Nav","Link","href","NavDropdown","title","Item","target","pdfjs","GlobalWorkerOptions","workerSrc","version","Resume","file","resume","pageNumber","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports"],"mappings":"kLAYeA,G,MAVF,WACX,OACE,yBAAKC,UAAU,QACb,wCACA,yBAAKC,IAAI,0DACT,wLCGSC,EARD,WACZ,OACE,yBAAKF,UAAU,SACb,0C,2BCkBSG,EAnBA,WACb,OACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAOC,OAAR,CAAeC,gBAAc,qBAC7B,kBAACF,EAAA,EAAOG,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKT,UAAU,WACb,kBAACS,EAAA,EAAIC,KAAL,CAAUC,KAAK,KAAf,QACA,kBAACF,EAAA,EAAIC,KAAL,CAAUC,KAAK,WAAf,UACA,kBAACF,EAAA,EAAIC,KAAL,CAAUC,KAAK,UAAf,SACA,kBAACC,EAAA,EAAD,CAAaC,MAAM,SAASL,GAAG,sBAC7B,kBAACI,EAAA,EAAYE,KAAb,CAAkBC,OAAO,SAASJ,KAAK,gDAAvC,YACA,kBAACC,EAAA,EAAYE,KAAb,CAAkBC,OAAO,SAASJ,KAAK,gCAAvC,e,yBCXZK,QAAMC,oBAAoBC,UAA1B,kDAAiFF,QAAMG,QAAvF,kBAEA,IAWeC,EAXA,WACb,OACE,yBAAKpB,UAAU,UACb,sCACA,kBAAC,WAAD,CAAUqB,KAAMC,KACd,kBAAC,OAAD,CAAMC,WAAY,O,yBCaXC,MAbf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKxB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,IAAIC,UAAW5B,IACjC,kBAAC,IAAD,CAAO2B,KAAK,UAAUC,UAAWP,IACjC,kBAAC,IAAD,CAAOM,KAAK,SAASC,UAAWzB,OCNpB0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,iBEnInB,SAASC,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBnC,GAAK,I,mBCRzB0C,EAAOC,QAAU,IAA0B,2C","file":"static/js/main.92f45ea5.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = () => {\n  return (\n    <div className=\"home\">\n      <h1>Welcome!</h1>\n      <img src=\"https://media.giphy.com/media/ASd0Ukj0y3qMM/giphy.gif\"/>\n      <p>Welcome! I am glad you are here. Please browse this site to learn more about me. I also appreciate your patience while this site is under maintenance.</p>\n    </div>\n  );\n}\n \nexport default Home;","import React from 'react';\n\nconst About = () => {\n  return (\n    <div className=\"about\">\n      <h2>About Me</h2>\n    </div>\n  );\n}\n \nexport default About;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\n\nconst NavBar = () => {\n  return (\n    <Navbar>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/\">Home</Nav.Link>\n          <Nav.Link href=\"/resume\">Resume</Nav.Link>\n          <Nav.Link href=\"/about\">About</Nav.Link>\n          <NavDropdown title=\"Social\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item target=\"_blank\" href=\"https://www.linkedin.com/in/andrew-davisson/\">LinkedIn</NavDropdown.Item>\n            <NavDropdown.Item target=\"_blank\" href=\"https://github.com/adavisson\">GitHub</NavDropdown.Item>\n          </NavDropdown>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n \nexport default NavBar;","import React from 'react';\nimport { Document, Page } from 'react-pdf';\nimport { pdfjs } from 'react-pdf';\nimport resume from \"../files/andrew-resume.pdf\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nconst Resume = () => {\n  return (\n    <div className=\"resume\">\n      <h1>Resume</h1>\n      <Document file={resume}>\n        <Page pageNumber={1}/>\n      </Document>\n    </div>\n  );\n}\n \nexport default Resume;","import React from 'react';\nimport Home from './components/Home';\nimport About from './components/About';\nimport NavBar from './components/NavBar';\nimport Resume from './components/Resume';\nimport './App.css';\nimport { \n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/resume\" component={Resume} />\n        <Route path=\"/about\" component={About} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport 'react-pdf/dist/Page/AnnotationLayer.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 42;","module.exports = __webpack_public_path__ + \"static/media/andrew-resume.1d184862.pdf\";"],"sourceRoot":""}