{"version":3,"sources":["files/profile_pic_crop.JPG","components/Home.js","styles/theme.js","components/NavBar.js","components/Resume.js","components/ProjectCard.js","components/Projects.js","components/Footer.js","App.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync","files/andrew-resume.pdf"],"names":["module","exports","Home","props","className","Image","src","pic","rounded","fluid","to","theme","createMuiTheme","palette","primary","main","contrastText","secondary","typography","fontFamily","join","cardStyle","makeStyles","root","width","margin","backgroundColor","title","fontSize","marginBottom","body","padding","pos","navStyle","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","color","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","contentShift","martingLeft","link","textDecoration","divider","nested","paddingLeft","withRouter","useState","open","setOpen","listOpen","setListOpen","iconCode","setIconCode","city","setCity","cityId","setCityId","temp","setTemp","usePosition","latitude","longitude","error","useEffect","a","fetch","result","json","data","name","weather","icon","id","setData","handleDrawerOpen","handleDrawerClose","handleSocialClick","Fragment","classes","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Link","href","target","Typography","variant","nowrap","parseInt","alt","Drawer","anchor","paper","Divider","List","ListItem","button","key","history","push","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","component","disablePadding","style","paddingRight","materialNav","pdfjs","GlobalWorkerOptions","workerSrc","version","openResume","window","resume","Resume","state","w","innerWidth","updateWindowDimensions","setState","this","addEventListener","removeEventListener","Button","file","pageNumber","Component","ProjectCard","Card","CardContent","description","CardActions","repository","Projects","map","proj","Footer","Nav","Item","App","ThemeProvider","exact","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","webpackEmptyContext","req","e","Error","code","keys","resolve"],"mappings":"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","file":"static/js/main.a0eca6fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile_pic_crop.17e50e44.JPG\";","import React from 'react';\nimport { Image } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport pic from '../files/profile_pic_crop.JPG';\n\nconst Home = (props) => {\n  return (\n    <div className=\"about\">\n      <h1>Welcome!</h1>\n      <Image className=\"profile-pic\" src={pic} rounded fluid />\n      <p>I am full stack web developer living in  Denver, Colorado. I have spent the last 5 years of my career working as a Systems Administrator and I found myself really enjoying the automation and scripting pieces of my job. I recently decided to make the transition from systems administration to web development, and I am loving every step of the journey. If you would like to see more about my skills and experience then please check out my <Link to='/resume'>Resume</Link>.</p>\n      <p>A little more about me, I grew up in South Carolina and went to Clemson University (Go Tigers!). After graduating with a degree in Computer Information Systems, I landed a job in Charleston, SC and lived there for several years. While I really enjoyed living there, I decided that I would like to live somewhere with more than zero mountains. So, I made the move to Denver in the Summer of 2017 and I am thoroughly enjoying it. My hobbies include golf, snowboarding, hiking, weightlifting, and more recently I have been trying to get into photography.</p>\n    </div>\n  );\n}\n \nexport default Home;","import { createMuiTheme, makeStyles } from '@material-ui/core/styles'\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#003866',\n      contrastText: '#ffb347',\n    },\n    secondary: {\n      main: '#ffb347',\n      contrastText: '#003866',\n    },\n  },\n  typography: {\n    fontFamily: ['\"Titillium Web\"', 'sans-serif'].join(','),\n  },\n})\n\nexport const cardStyle = makeStyles({\n  root: {\n    width: '20rem',\n    margin: '15px',\n    backgroundColor: '#003866',\n  },\n  title: {\n    fontSize: 'x-large',\n    marginBottom: '10px'\n  },\n  body: {\n    padding: '15px',\n    backgroundColor: '#ffb347'\n  },\n  pos: {\n    marginBottom: 12,\n  },\n})\n\nconst drawerWidth = 240\n\nexport const navStyle = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    // flexGrow: 1,\n    // marginBottom: '15px',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#003866',\n    color: '#ffb347',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n    backgroundColor: '#ffb347',\n    color: '#003866',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    martingLeft: 0,\n  },\n  link: {\n    '&:hover': {\n      color: '#ffb347',\n      textDecoration: 'none',\n    },\n  },\n  divider: {\n    backgroundColor: '#ffb347',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  }\n}));","import React, { useState, useEffect } from 'react'\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap'\nimport { usePosition } from 'use-position'\nimport { withRouter } from 'react-router-dom'\nimport clsx from 'clsx'\nimport {\n  AppBar,\n  Collapse,\n  Toolbar,\n  IconButton,\n  Typography,\n  Drawer,\n  Divider,\n  Link,\n  List,\n  ListItem,\n  ListItemText,\n} from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\nimport { ExpandLess, ExpandMore } from '@material-ui/icons'\nimport { navStyle } from '../styles/theme'\n\nconst NavBar = (props) => {\n  const [open, setOpen] = useState(false)\n  const [listOpen, setListOpen] = useState(false)\n  const [expanded, setExpanded] = useState(false)\n  const [iconCode, setIconCode] = useState('')\n  const [city, setCity] = useState('')\n  const [cityId, setCityId] = useState('5419384')\n  const [temp, setTemp] = useState('')\n  const appId = '440287f1b78a560637a7abe6f38d3739'\n  const { latitude, longitude, error } = usePosition()\n\n  useEffect(() => {\n    const setData = async () => {\n      const result = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${\n          latitude || 39.74\n        }&lon=${longitude || -104.99}&units=imperial&appid=${appId}`\n      )\n      const data = await result.json()\n      setCity(data.name)\n      setTemp(data.main.temp)\n      setIconCode(data.weather[0].icon)\n      setCityId(data.id)\n    }\n    setData()\n  }, [latitude, longitude])\n\n  const bootStrapNav = () => {\n    return (\n      <Navbar expanded={expanded} sticky=\"top\" expand=\"lg\">\n        <Navbar.Brand\n          onClick={() => {\n            if (expanded) {\n              setExpanded(false)\n            }\n            props.history.push('/')\n          }}\n        >\n          Home\n        </Navbar.Brand>\n        <Navbar.Toggle\n          aria-controls=\"basic-navbar-nav\"\n          onClick={() => setExpanded(!expanded)}\n        />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link\n              onClick={() => {\n                if (expanded) {\n                  setExpanded(false)\n                }\n                props.history.push('/resume')\n              }}\n            >\n              Resume\n            </Nav.Link>\n            <Nav.Link href=\"https://adavisson.github.io\">Blog</Nav.Link>\n            <NavDropdown title=\"Social\" id=\"basic-nav-dropdown-social\">\n              <NavDropdown.Item\n                target=\"_blank\"\n                href=\"https://www.linkedin.com/in/andrew-davisson/\"\n              >\n                LinkedIn\n              </NavDropdown.Item>\n              <NavDropdown.Item\n                target=\"_blank\"\n                href=\"https://github.com/adavisson\"\n              >\n                GitHub\n              </NavDropdown.Item>\n              <NavDropdown.Item\n                target=\"_blank\"\n                href=\"https://www.builtincolorado.com/member/akdavisson4/176086\"\n              >\n                Built In Colorado\n              </NavDropdown.Item>\n            </NavDropdown>\n            <Nav.Link\n              onClick={() => {\n                if (expanded) {\n                  setExpanded(false)\n                }\n                props.history.push('/projects')\n              }}\n            >\n              Projects\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n        <Nav className=\"weather\">\n          <Nav.Link\n            href={`https://openweathermap.org/city/${cityId}`}\n            target=\"_blank\"\n          >\n            {`${city} ${parseInt(temp)}\\xB0F `}\n            <img\n              alt=\"weather icon\"\n              src={`https://openweathermap.org/img/wn/${iconCode}.png`}\n            />\n          </Nav.Link>\n        </Nav>\n      </Navbar>\n    )\n  }\n\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n\n  const handleSocialClick = () => {\n    setListOpen(!listOpen)\n  }\n\n  const materialNav = () => {\n    const classes = navStyle()\n\n    return (\n      <div className={classes.root}>\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n          <Link\n            color=\"secondary\"\n            className={classes.link}\n            href={`https://openweathermap.org/city/${cityId}`}\n            target=\"_blank\"\n          >\n            <Typography variant=\"h6\" nowrap>\n            {`${city} ${parseInt(temp)}\\xB0F `}\n            <img\n              alt=\"weather icon\"\n              src={`https://openweathermap.org/img/wn/${iconCode}.png`}\n            />\n            </Typography>\n          </Link>\n          </Toolbar>\n        </AppBar>\n        <Toolbar />\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n              <ChevronLeftIcon color=\"primary\" />\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            <ListItem button key=\"Home\" onClick={() => {\n              props.history.push('/')\n              setOpen(false)}}\n            >\n              <ListItemText primary=\"Home\" />\n            </ListItem>\n            <ListItem button key=\"Projects\" onClick={() => {\n              props.history.push('/projects')\n              setOpen(false)}}\n            >\n              <ListItemText primary=\"Projects\" />\n            </ListItem>\n            <Link className={classes.link} color=\"secondary\" href=\"https://adavisson.github.io/\">\n              <ListItem button key=\"Blog\">\n                  <ListItemText primary=\"Blog\" />\n              </ListItem>\n            </Link>\n            <Divider className={classes.divider}/>\n            <ListItem button onClick={handleSocialClick}>\n              <ListItemText primary=\"Social\" />\n              {listOpen ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={listOpen} timeout=\"auto\" unmountOnExit>\n              <List component=\"div\" disablePadding>\n                <Link className={classes.link} color=\"secondary\" href=\"https://www.linkedin.com/in/andrew-davisson/\">\n                  <ListItem button className={classes.nested} key=\"LinkedIn\">\n                    <LinkedInIcon style={{paddingRight: \"5px\" }}/>\n                    <ListItemText primary=\"LinkedIn\" />\n                  </ListItem>\n                </Link>\n                <Link className={classes.link} color=\"secondary\" href=\"https://github.com/adavisson\">\n                  <ListItem button className={classes.nested} key=\"Github\">\n                    <GitHubIcon style={{paddingRight: \"5px\" }}/>\n                    <ListItemText primary=\"Github\" />\n                  </ListItem>\n                </Link>\n                <Link className={classes.link} color=\"secondary\" href=\"https://www.builtincolorado.com/member/akdavisson4/176086\">\n                  <ListItem button className={classes.nested} key=\"Built In Colorado\">\n                    <ListItemText primary=\"Built In Colorado\" />\n                  </ListItem>\n                </Link>\n              </List>\n            </Collapse>\n          </List>\n        </Drawer>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      {!true && bootStrapNav()}\n      {true && <React.Fragment>{materialNav()}</React.Fragment>}\n    </>\n  )\n}\n\nexport default withRouter(NavBar)\n","//import React from 'react';\nimport React, { Component } from 'react'\nimport { Document, Page } from 'react-pdf'\nimport { pdfjs } from 'react-pdf'\nimport resume from '../files/andrew-resume.pdf'\nimport { Button } from '@material-ui/core'\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`\n\n\nconst openResume = () => {\n  window.open(resume, '_blank')\n  return false\n}\n\nclass Resume extends Component {\n  state = {\n    w: window.innerWidth,\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions()\n    window.addEventListener('resize', this.updateWindowDimensions)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions)\n  }\n\n  updateWindowDimensions = () => {\n    if (window.innerWidth < 700) {\n      this.setState({\n        w: window.innerWidth * 0.9,\n      })\n    } else {\n      this.setState({\n        w: null,\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"resume\">\n        <h1>Resume</h1>\n        <div className=\"link\">\n          <Button variant=\"contained\" color=\"primary\" onClick={openResume}>\n            Download a Copy\n          </Button>\n        </div>\n        <div className=\"document\">\n          <Document file={resume}>\n            <Page pageNumber={1} width={this.state.w} />\n          </Document>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Resume\n","import React from 'react';\nimport { Card, CardContent, Button, Typography, CardActions } from '@material-ui/core'\nimport { cardStyle } from '../styles/theme'\n\nconst ProjectCard = (props) => {\n\n  const classes = cardStyle();\n  return (\n    <Card className={classes.root} color=\"primary\">\n      <CardContent>\n        <Typography className={classes.title} color=\"secondary\">\n          {props.title}\n        </Typography>\n        <Typography className={classes.body} color=\"primary\">\n          {props.description}\n        </Typography>\n      </CardContent>\n      <CardActions>\n      <Button variant=\"contained\" color=\"secondary\" href={props.repository}>\n          Github\n        </Button>\n        {props.link && (\n          <Button variant=\"contained\" color=\"secondary\" href={props.link}>\n            Demo\n          </Button>\n        )}\n      </CardActions>\n    </Card>\n  );\n}\n \nexport default ProjectCard;","import React from 'react';\nimport ProjectCard from './ProjectCard';\n\nconst Projects = () => {\n\n  const projects = [\n    {\n      title: \"Job Board\",\n      description: \"This application allows a user to view companies and job postings, and save contact information and notes. This project also implements GraphQL.\",\n      repository: \"https://github.com/adavisson/job-board-client\"\n    },\n    {\n      title: \"CFB Machine\",\n      description: \"This application allows allows you to look up historical College Football matches and stats.\",\n      repository: \"https://github.com/adavisson/cfb-machine\",\n      link: \"https://cfb-machine.andydavisson.com/\"\n    },\n    {\n      title: \"Ansible Home\",\n      description: \"A small Ansible project for managing my home media server and my AWS hosted webserver.\",\n      repository: \"https://github.com/adavisson/ansible-home\"\n    },\n    {\n      title: \"Crazy Tales\",\n      description: \"This application mimics Mad Libs. A user is presented with types of words to come up with and is then presented with a story where those words are used.\",\n      repository: \"https://github.com/adavisson/crazy-tales\",\n      link: \"https://crazy-tales.andydavisson.com/\"\n    },\n    {\n      title: \"Meme Generator\",\n      description: \"This application has several popular images used in memes and allows you to add a phrase. It also allows you to choose the placement and color of the phrase.\",\n      repository: \"https://github.com/adavisson/meme-generator\"\n    },\n    {\n      title: \"Rails Library\",\n      description: \"This is a full Ruby on Rails application that mimics a library. It allows Librarians to add books, authors, and genres, and it allows standard users to check in/out books.\",\n      repository: \"https://github.com/adavisson/rails-project-library\"\n    },\n    {\n      title: \"Study Buddy\",\n      description: \"This application provides study questions for various topics that one might see in a developer interview.\",\n      repository: \"https://github.com/adavisson/study-buddy\",\n      link: \"https://study-buddy.andydavisson.com/\"\n    },\n    {\n      title: \"Beer Presenter\",\n      description: \"This is a command line Ruby application that scrapes the site Untappd for the top 50 beers, and allows you to view them by genre and brewery.\",\n      repository: \"https://github.com/adavisson/beer_presenter\"\n    }\n  ]\n\n  return (\n    <>\n      <h1>Projects</h1>\n      <div className=\"card-container\">\n        {projects.map(proj => {\n          return (\n            <ProjectCard\n              title={proj.title}\n              description={proj.description}\n              repository={proj.repository}\n              link={proj.link}\n            />\n          )\n        })}\n      </div>\n    </>\n  );\n}\n \nexport default Projects;","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\n\nconst Footer = () => {\n  return (\n    <div>\n      <div className=\"phantom\" />\n        <div className=\"footer\">\n        <Nav className=\"justify-content-center\" >\n          <Nav.Item>\n            <Nav.Link href=\"https://www.linkedin.com/in/andrew-davisson/\">\n              <LinkedInIcon />\n            </Nav.Link>\n          </Nav.Item>\n          <span style={{ padding: \"5px 5px\"}}>|</span>\n          <Nav.Item>\n            <Nav.Link href=\"https://github.com/adavisson\">\n              <GitHubIcon />\n            </Nav.Link>\n          </Nav.Item>\n          <span style={{ padding: \"5px 5px\"}}>|</span>\n          <Nav.Item>\n            <Nav.Link href=\"https://www.builtincolorado.com/member/akdavisson4/176086\">Built In Colorado</Nav.Link>\n          </Nav.Item>\n        </Nav>\n      </div>\n    </div>\n  );\n}\n \nexport default Footer;","import React from 'react'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport Home from './components/Home'\nimport NavBar from './components/NavBar'\nimport Resume from './components/Resume'\nimport Projects from './components/Projects'\nimport Footer from './components/Footer'\nimport './App.css'\nimport { theme } from './styles/theme'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/resume\" component={Resume} />\n        <Route path=\"/projects\" component={Projects} />\n        <Footer />\n      </div>\n    </Router>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport 'react-pdf/dist/Page/AnnotationLayer.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 69;","module.exports = __webpack_public_path__ + \"static/media/andrew-resume.d4c1b4e6.pdf\";"],"sourceRoot":""}